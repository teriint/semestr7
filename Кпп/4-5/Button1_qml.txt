import QtQuick 2.7

Rectangle {
    id: button1
   //property string text: "Сравнить" // переменная, содержащая текст, который будет отображаться в кнопке
    property int buttonHeight: 75
    property int buttonWidth: 150
   property string label
       property color textColor: buttonLabel.color
   property color onHoverColor: "lightsteelblue"
   property color borderColor: "transparent"

   property color buttonColor: "lightblue"
   property real labelSize: 14

   radius: 6
   antialiasing: true
   border { width: 2; color: borderColor }
   width: buttonWidth; height: buttonHeight

   Text
   {
       id: buttonLabel
       anchors.centerIn: parent
       text: label //привязываем текст к тексту "родителя"
       color: "#000000"
       font.pointSize: labelSize
   }
   signal buttonClick()
   MouseArea {
   id: buttonMouseArea
   anchors.fill: parent //размер равен размеру "родителя"
   onClicked: buttonClick()
   hoverEnabled: true
   //отобразить рамку, если навели курсор
   onEntered: parent.border.color = onHoverColor
   //удалить рамку при удалении курсор  а с кнопки
   onExited: parent.border.color = borderColor
   }
   color: buttonMouseArea.pressed ? Qt.darker(buttonColor, 1.5) : buttonColor
   //анимация смены цвета
   Behavior on color { ColorAnimation{ duration: 55 } }

   scale: buttonMouseArea.pressed ? 1.1 : 1.00
   //анимация при увеличении кнопки
   Behavior on scale { NumberAnimation{ duration: 55 }}
}
